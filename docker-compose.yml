version: "3"
services:
  vsnet-social:
    container_name: "vsnet-social"
    build:
      context: ../vsnet-social
      dockerfile: Dockerfile.dev
    volumes:
      - ../vsnet-social/src:/app/src
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      - vsnet-social-pubsub
    environment:
      - NODE_ENV=development
      - PORT=8080
      - APP_SECRET=mysecret
      - REDIS_PUBSUB_SERVICE=redis://vsnet-social-pubsub:6379
    restart: always
  vsnet-social-pubsub:
    container_name: "vsnet-social-pubsub"
    image: redis
    expose:
      - "6379"
    ports:
      - "6379:6379"
    restart: always
  vsnet-api:
    container_name: "vsnet-api"
    build:
      context: ../vsnet-api
      dockerfile: Dockerfile.dev
    volumes:
      - ../vsnet-api/src:/app/src
    expose:
      - "8081"
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=8081
      - APP_SECRET=mysecret
      - DB=postgres://user@postgres/makeshift
    restart: always
  vsnet-auth:
    container_name: "vsnet-auth"
    build:
      context: ../vsnet-auth
      dockerfile: Dockerfile.dev
    volumes:
      - ../vsnet-auth/src:/app/src
    expose:
      - "8082"
    ports:
      - "8082:8082"
    depends_on:
        - vsnet-api
    environment:
      - NODE_ENV=development
      - PORT=8082
      - APP_SECRET=mysecret
      - DB=postgres://user@postgres/makeshift
    restart: always
  postgres:
    container_name: "vsnet-postgres"
    image: postgres:10.2-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: makeshift
    expose:
      - "5432"
    ports:
      - "5432:5432"
